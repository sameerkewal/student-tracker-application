CREATE OR REPLACE EDITIONABLE PACKAGE "STA_SYSTEM_PARAMETER_API" IS
  /*
  This is the API for the table "STA_SYSTEM_PARAMETER" with column ID generated BY DEFAULT ON NULL as identity.

  GENERATION OPTIONS
  - Must be in the lines 5-42 to be reusable by the generator
  - DO NOT TOUCH THIS until you know what you do
  - Read the docs under github.com/OraMUC/table-api-generator ;-)
  <options
    generator="OM_TAPIGEN"
    generator_version="0.6.3"
    generator_action="COMPILE_API"
    generated_at="2024-05-01 03:06:25"
    generated_by="PNL14U85"
    p_table_name="STA_SYSTEM_PARAMETER"
    p_owner="STA"
    p_enable_insertion_of_rows="TRUE"
    p_enable_column_defaults="FALSE"
    p_enable_update_of_rows="TRUE"
    p_enable_deletion_of_rows="FALSE"
    p_enable_parameter_prefixes="TRUE"
    p_enable_proc_with_out_params="TRUE"
    p_enable_getter_and_setter="TRUE"
    p_col_prefix_in_method_names="TRUE"
    p_return_row_instead_of_pk="FALSE"
    p_double_quote_names="TRUE"
    p_default_bulk_limit="1000"
    p_enable_dml_view="TRUE"
    p_dml_view_name="STA_SYSTEM_PARAMETER_DML_V"
    p_dml_view_trigger_name="STA_SYSTEM_PARAMETER_IOIUD"
    p_enable_one_to_one_view="FALSE"
    p_one_to_one_view_name="STA_SYSTEM_PARAMETER_V"
    p_api_name="STA_SYSTEM_PARAMETER_API"
    p_sequence_name=""
    p_exclude_column_list=""
    p_audit_column_mappings=""
    p_audit_user_expression="coalesce(sys_context('apex$session','app_user'), sys_context('userenv','os_user'), sys_context('userenv','session_user'))"
    p_row_version_column_mapping=""
    p_tenant_column_mapping=""
    p_enable_custom_defaults="FALSE"
    p_custom_default_values=""/>
  */

  TYPE t_rows_tab          IS TABLE OF "STA_SYSTEM_PARAMETER"%ROWTYPE;
  TYPE t_strong_ref_cursor IS REF CURSOR RETURN "STA_SYSTEM_PARAMETER"%ROWTYPE;

  FUNCTION bulk_is_complete
  RETURN BOOLEAN;

  PROCEDURE set_bulk_limit (
    p_bulk_limit IN PLS_INTEGER );

  FUNCTION get_bulk_limit
  RETURN PLS_INTEGER;

  FUNCTION row_exists (
    p_id IN "STA_SYSTEM_PARAMETER"."ID"%TYPE /*PK*/ )
  RETURN BOOLEAN;

  FUNCTION row_exists_yn (
    p_id IN "STA_SYSTEM_PARAMETER"."ID"%TYPE /*PK*/ )
  RETURN VARCHAR2;

  FUNCTION create_row (
    p_id        IN "STA_SYSTEM_PARAMETER"."ID"%TYPE DEFAULT NULL /*PK*/ /*GENERATED BY DEFAULT ON NULL AS IDENTITY*/,
    p_parameter IN "STA_SYSTEM_PARAMETER"."PARAMETER"%TYPE,
    p_value     IN "STA_SYSTEM_PARAMETER"."VALUE"%TYPE )
  RETURN "STA_SYSTEM_PARAMETER"."ID"%TYPE;

  PROCEDURE create_row (
    p_id        IN "STA_SYSTEM_PARAMETER"."ID"%TYPE DEFAULT NULL /*PK*/ /*GENERATED BY DEFAULT ON NULL AS IDENTITY*/,
    p_parameter IN "STA_SYSTEM_PARAMETER"."PARAMETER"%TYPE,
    p_value     IN "STA_SYSTEM_PARAMETER"."VALUE"%TYPE );

  FUNCTION create_row (
    p_row IN "STA_SYSTEM_PARAMETER"%ROWTYPE )
  RETURN "STA_SYSTEM_PARAMETER"."ID"%TYPE;

  PROCEDURE create_row (
    p_row IN "STA_SYSTEM_PARAMETER"%ROWTYPE );

  FUNCTION create_rows (
    p_rows_tab IN t_rows_tab )
  RETURN t_rows_tab;

  PROCEDURE create_rows (
    p_rows_tab IN t_rows_tab );

  FUNCTION read_row (
    p_id IN "STA_SYSTEM_PARAMETER"."ID"%TYPE /*PK*/ )
  RETURN "STA_SYSTEM_PARAMETER"%ROWTYPE;

  PROCEDURE read_row (
    p_id        IN            "STA_SYSTEM_PARAMETER"."ID"%TYPE /*PK*/,
    p_parameter    OUT NOCOPY "STA_SYSTEM_PARAMETER"."PARAMETER"%TYPE,
    p_value        OUT NOCOPY "STA_SYSTEM_PARAMETER"."VALUE"%TYPE );

  FUNCTION read_rows (
    p_ref_cursor IN t_strong_ref_cursor )
  RETURN t_rows_tab;

  FUNCTION update_row (
    p_id        IN "STA_SYSTEM_PARAMETER"."ID"%TYPE DEFAULT NULL /*PK*/,
    p_parameter IN "STA_SYSTEM_PARAMETER"."PARAMETER"%TYPE,
    p_value     IN "STA_SYSTEM_PARAMETER"."VALUE"%TYPE )
  RETURN "STA_SYSTEM_PARAMETER"."ID"%TYPE;

  PROCEDURE update_row (
    p_id        IN "STA_SYSTEM_PARAMETER"."ID"%TYPE DEFAULT NULL /*PK*/,
    p_parameter IN "STA_SYSTEM_PARAMETER"."PARAMETER"%TYPE,
    p_value     IN "STA_SYSTEM_PARAMETER"."VALUE"%TYPE );

  FUNCTION update_row (
    p_row IN "STA_SYSTEM_PARAMETER"%ROWTYPE )
  RETURN "STA_SYSTEM_PARAMETER"."ID"%TYPE;

  PROCEDURE update_row (
    p_row IN "STA_SYSTEM_PARAMETER"%ROWTYPE );

  PROCEDURE update_rows (
    p_rows_tab IN t_rows_tab );

  FUNCTION create_or_update_row (
    p_id        IN "STA_SYSTEM_PARAMETER"."ID"%TYPE DEFAULT NULL /*PK*/,
    p_parameter IN "STA_SYSTEM_PARAMETER"."PARAMETER"%TYPE,
    p_value     IN "STA_SYSTEM_PARAMETER"."VALUE"%TYPE )
  RETURN "STA_SYSTEM_PARAMETER"."ID"%TYPE;

  PROCEDURE create_or_update_row (
    p_id        IN "STA_SYSTEM_PARAMETER"."ID"%TYPE DEFAULT NULL /*PK*/,
    p_parameter IN "STA_SYSTEM_PARAMETER"."PARAMETER"%TYPE,
    p_value     IN "STA_SYSTEM_PARAMETER"."VALUE"%TYPE );

  FUNCTION create_or_update_row (
    p_row IN "STA_SYSTEM_PARAMETER"%ROWTYPE )
  RETURN "STA_SYSTEM_PARAMETER"."ID"%TYPE;

  PROCEDURE create_or_update_row (
    p_row IN "STA_SYSTEM_PARAMETER"%ROWTYPE );

  FUNCTION get_parameter (
    p_id IN "STA_SYSTEM_PARAMETER"."ID"%TYPE /*PK*/ )
  RETURN "STA_SYSTEM_PARAMETER"."PARAMETER"%TYPE;

  FUNCTION get_value (
    p_id IN "STA_SYSTEM_PARAMETER"."ID"%TYPE /*PK*/ )
  RETURN "STA_SYSTEM_PARAMETER"."VALUE"%TYPE;

  PROCEDURE set_parameter (
    p_id        IN "STA_SYSTEM_PARAMETER"."ID"%TYPE /*PK*/,
    p_parameter IN "STA_SYSTEM_PARAMETER"."PARAMETER"%TYPE );

  PROCEDURE set_value (
    p_id    IN "STA_SYSTEM_PARAMETER"."ID"%TYPE /*PK*/,
    p_value IN "STA_SYSTEM_PARAMETER"."VALUE"%TYPE );

END "STA_SYSTEM_PARAMETER_API";
/