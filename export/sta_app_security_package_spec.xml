<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog 
	xmlns="http://www.liquibase.org/xml/ns/dbchangelog" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:n0="http://www.oracle.com/xml/ns/dbchangelog-ext" 
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog 
	http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">
	<changeSet id="57e46ea601c976caa7c24762b9ffe49b2ebc2a7c" author="(STA)-Generated" failOnError="false"   runOnChange="false" runAlways="false"  >
		<n0:createOraclePackageSpec objectName="STA_APP_SECURITY" objectType="PACKAGE_SPEC" ownerName="STA"  replaceIfExists="false" >
			<n0:source><![CDATA[CREATE OR REPLACE EDITIONABLE PACKAGE "%USER_NAME%"."STA_APP_SECURITY" is
    function f_generate_salt return varchar2;
    function f_hash_password    ( pi_password sta_user.password%type, pi_salt sta_user.salt%type) return varchar2;
    function f_validate_password( pi_password sta_user.password%type, pi_salt sta_user.salt%type, pi_hashed_password varchar2) return boolean;
    function f_is_usr_authenticated( p_username sta_user.email%type, p_password sta_user.password%type) return boolean;

    -- Check if the password satisfies the following conditions:
    -- minimum of 8 characters long and max of 128 characters
    -- minimum 1 capital letter
    -- minimum 1 normal sized letter
    -- minimum 1 special character
    -- minimum 1 number(0-9)
    function f_password_chk( pi_password sta_user.password%type )return boolean;

    --Authorisation function
    function f_is_component_authorized ( pi_application_id      in number
                                       , pi_email               in sta_user.email%type
                                       , pi_apex_page_id        in number
                                       , p_component_type       in varchar2
                                       , pi_component_id        in number
                                       , pi_apex_component_name in sta_authorization.apex_component_name%type
                                       , pi_read_only           in sta_authorization.read_only%type default false
                                       , pi_auth_type            in varchar2
                                       ) return boolean;



end sta_app_security;
/]]></n0:source>
		</n0:createOraclePackageSpec>
	</changeSet>
</databaseChangeLog>
